@import '../../styles/variables'; // Ensure this path is correct

// Animations (reuse from other modals)
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }
@keyframes slideUp { from { transform: translateY(20px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }
@keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }

// Host styling
:host {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1000; // Ensure it's on top
}

// Modal overlay styling
.modal-overlay {
  width: 100%;
  height: 100%;
  background-color: rgba($black, 0.6);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.3s ease-out;
}

// Modal card styling
.modal-card {
  background: $white;
  color: $text-color;
  border-radius: $border-radius-large;
  box-shadow: 0 10px 30px rgba($black, 0.2);
  width: 90%;
  max-width: 450px; // Slightly smaller width might be suitable
  position: relative;
  overflow: hidden;
  animation: slideUp 0.4s ease-out;
}

// Modal header styling
.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.25rem 1.5rem;
  border-bottom: 1px solid $border-color;

  h2 {
    margin: 0;
    font-size: 1.4rem;
    font-weight: 600;
  }
}

// Close button styling
.close-button {
  background: none;
  border: none;
  font-size: 2rem;
  line-height: 1;
  color: $sec-text-color;
  cursor: pointer;
  transition: color 0.2s ease;

  &:hover {
    color: $primary-color;
  }
}

// Modal body styling
.modal-body {
  padding: 1.5rem;
}

// Form group styling
.form-group {
  margin-bottom: 1.25rem;

  label {
    display: block;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: $text-color;
  }
}

// Input and textarea field styling (reuse common styles)
.input-field,
.textarea-field {
  width: 100%;
  padding: 0.8rem 1rem;
  border: 1px solid $border-color;
  border-radius: $border-radius-default;
  font-size: 1rem;
  font-family: inherit;
  transition: border-color 0.2s, box-shadow 0.2s;

  &:focus {
    outline: none;
    border-color: $primary-color;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
  }

  // Error state styling
  &.ng-invalid.ng-touched {
    border-color: #e74c3c; // Error color
  }
}

.textarea-field {
  resize: vertical;
  min-height: 80px;
}

// Inline error message styling
.error-message-inline {
  color: #e74c3c; // Error color
  font-size: 0.85rem;
  margin-top: $spacing-sm;
}

// General API error message styling
.error-message.general-error {
  color: #e74c3c;
  background-color: #fbeae8; // Light red background
  border: 1px solid #e74c3c;
  border-radius: $border-radius-default;
  padding: 0.75rem 1rem;
  margin-top: 1.5rem;
  font-size: 0.9rem;
  text-align: center;
}

// Modal actions footer styling
.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 1.5rem;
}

// Button styling (reuse common styles)
.btn {
  font-weight: 600;
  padding: 10px 24px;
  border-radius: 30px;
  cursor: pointer;
  transition: all 0.3s ease;
  border: 1px solid transparent;

  &[disabled] {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

.btn-primary {
  background: $primary-gradient;
  color: $white;
  &:hover:not(:disabled) { opacity: 0.9; }
}

.btn-secondary {
  background-color: $white;
  color: $text-color;
  border-color: $border-color;
  &:hover:not(:disabled) { background-color: #f7f7f7; border-color: darken($border-color, 10%); }
}

// Loading overlay styling
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba($white, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
}

// Spinner styling (reuse common styles)
.spinner {
  border: 4px solid rgba($black, 0.1);
  width: 36px;
  height: 36px;
  border-radius: 50%;
  border-left-color: $primary-color;
  animation: spin 1s ease infinite;
}